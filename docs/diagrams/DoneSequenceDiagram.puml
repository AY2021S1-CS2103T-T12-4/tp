@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":NuudleParser" as NuudleParser LOGIC_COLOR
participant ":DoneCommandParser" as DoneCommandParser LOGIC_COLOR
participant "loader:DateTimeLoader" as DateTimeLoader LOGIC_COLOR
participant "d:DoneCommand" as DoneCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "toMark:Appointment" as ToMarkAppointment MODEL_COLOR
participant "doneAppointment:Appointment" as DoneAppointment MODEL_COLOR
end box
[-> LogicManager : execute("done d/.. t/..")
activate LogicManager

LogicManager -> NuudleParser : parseCommand("done d/.. t/..")
activate NuudleParser

create DoneCommandParser
NuudleParser -> DoneCommandParser : DoneCommandParser()
activate DoneCommandParser

DoneCommandParser --> NuudleParser
deactivate DoneCommandParser

NuudleParser -> DoneCommandParser : parse("d/.. t/..")
activate DoneCommandParser

create DateTimeLoader
DoneCommandParser -> DateTimeLoader : new DateTimeLoader()
activate DateTimeLoader

DateTimeLoader --> DoneCommandParser : loader
deactivate DateTimeLoader

create DoneCommand
DoneCommandParser -> DoneCommand : new DoneCommand(loader)
activate DoneCommand

DoneCommand --> DoneCommandParser
deactivate DoneCommand

DoneCommandParser --> NuudleParser : d
deactivate DoneCommandParser

NuudleParser --> LogicManager : d
deactivate NuudleParser

LogicManager -> DoneCommand : execute()
activate DoneCommand

DoneCommand -> Model : getFilteredAppointmentList()
activate Model

Model --> DoneCommand : lastShownAppointmentList
deactivate Model

DoneCommand -> ToMarkAppointment : toMark.markAsDone()
activate ToMarkAppointment

create DoneAppointment
ToMarkAppointment -> DoneAppointment : markAsDone()
activate DoneAppointment

DoneAppointment --> ToMarkAppointment
deactivate DoneAppointment

ToMarkAppointment --> DoneCommand : doneAppointment
deactivate ToMarkAppointment

DoneCommand -> Model : setAppointment(toMark, doneAppointment)
activate Model

Model --> DoneCommand
deactivate Model

DoneCommand --> LogicManager : result
deactivate DoneCommand
DoneCommand -[hidden]-> LogicManager : result
destroy DoneCommand

[<--LogicManager
deactivate LogicManager
@enduml
